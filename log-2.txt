
Input: crashes-2/05
=================================================================
==1811230==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffffffe2f0 at pc 0x5555555f86fa bp 0x7fffffffd4b0 sp 0x7fffffffcc80
WRITE of size 8 at 0x7fffffffe2f0 thread T0
    #0 0x5555555f86f9 in __asan_memcpy (/home/snagy/snappy_fuzzing/harness-2+0xa46f9) (BuildId: e339e33abc8f03c69b731b6e8a55a4e6f5f5049b)
    #1 0x55555563f418 in snappy::(anonymous namespace)::UnalignedCopy64(void const*, void*) /home/snagy/snappy_fuzzing/snappy/snappy.cc:208:3
    #2 0x55555563f0eb in snappy::(anonymous namespace)::IncrementalCopy(char const*, char*, char*, char*) /home/snagy/snappy_fuzzing/snappy/snappy.cc:531:9
    #3 0x55555564df26 in snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long, char**) /home/snagy/snappy_fuzzing/snappy/snappy.cc:2013:15
    #4 0x55555564df26 in void snappy::SnappyDecompressor::DecompressAllTags<snappy::SnappyArrayWriter>(snappy::SnappyArrayWriter*) /home/snagy/snappy_fuzzing/snappy/snappy.cc:1481:24
    #5 0x55555563e776 in bool snappy::InternalUncompressAllTags<snappy::SnappyArrayWriter>(snappy::SnappyDecompressor*, snappy::SnappyArrayWriter*, unsigned int, unsigned int) /home/snagy/snappy_fuzzing/snappy/snappy.cc:1599:17
    #6 0x55555563c926 in bool snappy::InternalUncompress<snappy::SnappyArrayWriter>(snappy::Source*, snappy::SnappyArrayWriter*) /home/snagy/snappy_fuzzing/snappy/snappy.cc:1586:10
    #7 0x55555563c66a in snappy::RawUncompress(snappy::Source*, char*) /home/snagy/snappy_fuzzing/snappy/snappy.cc:2035:10
    #8 0x55555563c4f8 in snappy::RawUncompress(char const*, unsigned long, char*) /home/snagy/snappy_fuzzing/snappy/snappy.cc:2030:10
    #9 0x555555636a8b in main (/home/snagy/snappy_fuzzing/harness-2+0xe2a8b) (BuildId: e339e33abc8f03c69b731b6e8a55a4e6f5f5049b)
    #10 0x7ffff7829d8f in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16
    #11 0x7ffff7829e3f in __libc_start_main csu/../csu/libc-start.c:392:3
    #12 0x5555555764d4 in _start (/home/snagy/snappy_fuzzing/harness-2+0x224d4) (BuildId: e339e33abc8f03c69b731b6e8a55a4e6f5f5049b)

Address 0x7fffffffe2f0 is located in stack of thread T0 at offset 912 in frame
    #0 0x5555556366ef in main (/home/snagy/snappy_fuzzing/harness-2+0xe26ef) (BuildId: e339e33abc8f03c69b731b6e8a55a4e6f5f5049b)

  This frame has 5 object(s):
    [32, 552) 'fuzz_file'
    [688, 720) 'str_cur'
    [752, 784) 'str_fin'
    [816, 848) 'str_Compress'
    [880, 912) 'str_Uncompress' <== Memory access at offset 912 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/snagy/snappy_fuzzing/harness-2+0xa46f9) (BuildId: e339e33abc8f03c69b731b6e8a55a4e6f5f5049b) in __asan_memcpy
Shadow bytes around the buggy address:
  0x10007fff7c00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c30: 00 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2
  0x10007fff7c40: f2 f2 00 00 00 00 f2 f2 f2 f2 00 00 00 00 f2 f2
=>0x10007fff7c50: f2 f2 00 00 00 00 f2 f2 f2 f2 00 00 00 00[f3]f3
  0x10007fff7c60: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7ca0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==1811230==ABORTING

Input: crashes-2/06
=================================================================
==1811232==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffffffe2f0 at pc 0x5555555f86fa bp 0x7fffffffd4b0 sp 0x7fffffffcc80
WRITE of size 8 at 0x7fffffffe2f0 thread T0
    #0 0x5555555f86f9 in __asan_memcpy (/home/snagy/snappy_fuzzing/harness-2+0xa46f9) (BuildId: e339e33abc8f03c69b731b6e8a55a4e6f5f5049b)
    #1 0x55555563f418 in snappy::(anonymous namespace)::UnalignedCopy64(void const*, void*) /home/snagy/snappy_fuzzing/snappy/snappy.cc:208:3
    #2 0x55555563f0eb in snappy::(anonymous namespace)::IncrementalCopy(char const*, char*, char*, char*) /home/snagy/snappy_fuzzing/snappy/snappy.cc:531:9
    #3 0x55555564df26 in snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long, char**) /home/snagy/snappy_fuzzing/snappy/snappy.cc:2013:15
    #4 0x55555564df26 in void snappy::SnappyDecompressor::DecompressAllTags<snappy::SnappyArrayWriter>(snappy::SnappyArrayWriter*) /home/snagy/snappy_fuzzing/snappy/snappy.cc:1481:24
    #5 0x55555563e776 in bool snappy::InternalUncompressAllTags<snappy::SnappyArrayWriter>(snappy::SnappyDecompressor*, snappy::SnappyArrayWriter*, unsigned int, unsigned int) /home/snagy/snappy_fuzzing/snappy/snappy.cc:1599:17
    #6 0x55555563c926 in bool snappy::InternalUncompress<snappy::SnappyArrayWriter>(snappy::Source*, snappy::SnappyArrayWriter*) /home/snagy/snappy_fuzzing/snappy/snappy.cc:1586:10
    #7 0x55555563c66a in snappy::RawUncompress(snappy::Source*, char*) /home/snagy/snappy_fuzzing/snappy/snappy.cc:2035:10
    #8 0x55555563c4f8 in snappy::RawUncompress(char const*, unsigned long, char*) /home/snagy/snappy_fuzzing/snappy/snappy.cc:2030:10
    #9 0x555555636a8b in main (/home/snagy/snappy_fuzzing/harness-2+0xe2a8b) (BuildId: e339e33abc8f03c69b731b6e8a55a4e6f5f5049b)
    #10 0x7ffff7829d8f in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16
    #11 0x7ffff7829e3f in __libc_start_main csu/../csu/libc-start.c:392:3
    #12 0x5555555764d4 in _start (/home/snagy/snappy_fuzzing/harness-2+0x224d4) (BuildId: e339e33abc8f03c69b731b6e8a55a4e6f5f5049b)

Address 0x7fffffffe2f0 is located in stack of thread T0 at offset 912 in frame
    #0 0x5555556366ef in main (/home/snagy/snappy_fuzzing/harness-2+0xe26ef) (BuildId: e339e33abc8f03c69b731b6e8a55a4e6f5f5049b)

  This frame has 5 object(s):
    [32, 552) 'fuzz_file'
    [688, 720) 'str_cur'
    [752, 784) 'str_fin'
    [816, 848) 'str_Compress'
    [880, 912) 'str_Uncompress' <== Memory access at offset 912 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/snagy/snappy_fuzzing/harness-2+0xa46f9) (BuildId: e339e33abc8f03c69b731b6e8a55a4e6f5f5049b) in __asan_memcpy
Shadow bytes around the buggy address:
  0x10007fff7c00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c30: 00 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2
  0x10007fff7c40: f2 f2 00 00 00 00 f2 f2 f2 f2 00 00 00 00 f2 f2
=>0x10007fff7c50: f2 f2 00 00 00 00 f2 f2 f2 f2 00 00 00 00[f3]f3
  0x10007fff7c60: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7ca0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==1811232==ABORTING

Input: crashes-2/08
=================================================================
==1811234==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffffffe2f0 at pc 0x5555555f86fa bp 0x7fffffffd4b0 sp 0x7fffffffcc80
WRITE of size 8 at 0x7fffffffe2f0 thread T0
    #0 0x5555555f86f9 in __asan_memcpy (/home/snagy/snappy_fuzzing/harness-2+0xa46f9) (BuildId: e339e33abc8f03c69b731b6e8a55a4e6f5f5049b)
    #1 0x55555563f418 in snappy::(anonymous namespace)::UnalignedCopy64(void const*, void*) /home/snagy/snappy_fuzzing/snappy/snappy.cc:208:3
    #2 0x55555563f0eb in snappy::(anonymous namespace)::IncrementalCopy(char const*, char*, char*, char*) /home/snagy/snappy_fuzzing/snappy/snappy.cc:531:9
    #3 0x55555564df26 in snappy::SnappyArrayWriter::AppendFromSelf(unsigned long, unsigned long, char**) /home/snagy/snappy_fuzzing/snappy/snappy.cc:2013:15
    #4 0x55555564df26 in void snappy::SnappyDecompressor::DecompressAllTags<snappy::SnappyArrayWriter>(snappy::SnappyArrayWriter*) /home/snagy/snappy_fuzzing/snappy/snappy.cc:1481:24
    #5 0x55555563e776 in bool snappy::InternalUncompressAllTags<snappy::SnappyArrayWriter>(snappy::SnappyDecompressor*, snappy::SnappyArrayWriter*, unsigned int, unsigned int) /home/snagy/snappy_fuzzing/snappy/snappy.cc:1599:17
    #6 0x55555563c926 in bool snappy::InternalUncompress<snappy::SnappyArrayWriter>(snappy::Source*, snappy::SnappyArrayWriter*) /home/snagy/snappy_fuzzing/snappy/snappy.cc:1586:10
    #7 0x55555563c66a in snappy::RawUncompress(snappy::Source*, char*) /home/snagy/snappy_fuzzing/snappy/snappy.cc:2035:10
    #8 0x55555563c4f8 in snappy::RawUncompress(char const*, unsigned long, char*) /home/snagy/snappy_fuzzing/snappy/snappy.cc:2030:10
    #9 0x555555636a8b in main (/home/snagy/snappy_fuzzing/harness-2+0xe2a8b) (BuildId: e339e33abc8f03c69b731b6e8a55a4e6f5f5049b)
    #10 0x7ffff7829d8f in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16
    #11 0x7ffff7829e3f in __libc_start_main csu/../csu/libc-start.c:392:3
    #12 0x5555555764d4 in _start (/home/snagy/snappy_fuzzing/harness-2+0x224d4) (BuildId: e339e33abc8f03c69b731b6e8a55a4e6f5f5049b)

Address 0x7fffffffe2f0 is located in stack of thread T0 at offset 912 in frame
    #0 0x5555556366ef in main (/home/snagy/snappy_fuzzing/harness-2+0xe26ef) (BuildId: e339e33abc8f03c69b731b6e8a55a4e6f5f5049b)

  This frame has 5 object(s):
    [32, 552) 'fuzz_file'
    [688, 720) 'str_cur'
    [752, 784) 'str_fin'
    [816, 848) 'str_Compress'
    [880, 912) 'str_Uncompress' <== Memory access at offset 912 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/snagy/snappy_fuzzing/harness-2+0xa46f9) (BuildId: e339e33abc8f03c69b731b6e8a55a4e6f5f5049b) in __asan_memcpy
Shadow bytes around the buggy address:
  0x10007fff7c00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c30: 00 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2
  0x10007fff7c40: f2 f2 00 00 00 00 f2 f2 f2 f2 00 00 00 00 f2 f2
=>0x10007fff7c50: f2 f2 00 00 00 00 f2 f2 f2 f2 00 00 00 00[f3]f3
  0x10007fff7c60: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7c90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fff7ca0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==1811234==ABORTING
