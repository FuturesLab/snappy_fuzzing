
Input: crashes-1/00
=================================================================
==4019==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x000106f00ac1 at pc 0x00010420c330 bp 0x00016bc0dde0 sp 0x00016bc0ddd8
WRITE of size 16 at 0x000106f00ac1 thread T0
    #0 0x10420c32c in snappy::internal::V128_StoreU(__simd128_uint8_t*, __simd128_uint8_t) snappy-internal.h:104
    #1 0x10420da4c in snappy::(anonymous namespace)::IncrementalCopy(char const*, char*, char*, char*) snappy.cc:516
    #2 0x104215304 in void snappy::SnappyDecompressor::DecompressAllTags<snappy::SnappyArrayWriter>(snappy::SnappyArrayWriter*) snappy.cc:1481
    #3 0x1042030c0 in bool snappy::InternalUncompressAllTags<snappy::SnappyArrayWriter>(snappy::SnappyDecompressor*, snappy::SnappyArrayWriter*, unsigned int, unsigned int) snappy.cc:1599
    #4 0x104200490 in bool snappy::InternalUncompress<snappy::SnappyArrayWriter>(snappy::Source*, snappy::SnappyArrayWriter*) snappy.cc:1586
    #5 0x1042000a0 in snappy::RawUncompress(snappy::Source*, char*) snappy.cc:2035
    #6 0x1041ffe78 in snappy::RawUncompress(char const*, unsigned long, char*) snappy.cc:2030
    #7 0x1041f4158 in main+0x47c (harness-1:arm64+0x100004158) (BuildId: d93b3604237e3a8a92ad41210ac90bce32000000200000000100000000000d00)
    #8 0x195d47f24  (<unknown module>)

0x000106f00ac1 is located 1 bytes to the right of 48-byte region [0x000106f00a90,0x000106f00ac0)
allocated by thread T0 here:
    #0 0x104639370 in wrap__Znwm+0x74 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x51370) (BuildId: f0a7ac5c49bc3abc851181b6f92b308a32000000200000000100000000000b00)
    #1 0x195fcfe48 in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__grow_by(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x98 (libc++.1.dylib:arm64e+0x19e48) (BuildId: 3ee924048fc3374ba598d5c9a8cd64b532000000200000000100000000050d00)
    #2 0x195fd0a90 in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::append(unsigned long, char)+0x74 (libc++.1.dylib:arm64e+0x1aa90) (BuildId: 3ee924048fc3374ba598d5c9a8cd64b532000000200000000100000000050d00)
    #3 0x1042041ac in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::resize[abi:v15006](unsigned long) string:976
    #4 0x1042008b4 in snappy::STLStringResizeUninitialized(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, unsigned long) snappy-stubs-internal.h:510
    #5 0x104201ba8 in snappy::Compress(char const*, unsigned long, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*) snappy.cc:2131
    #6 0x1041f4064 in main+0x388 (harness-1:arm64+0x100004064) (BuildId: d93b3604237e3a8a92ad41210ac90bce32000000200000000100000000000d00)
    #7 0x195d47f24  (<unknown module>)

SUMMARY: AddressSanitizer: heap-buffer-overflow snappy-internal.h:104 in snappy::internal::V128_StoreU(__simd128_uint8_t*, __simd128_uint8_t)
Shadow bytes around the buggy address:
  0x007020e00100: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020e00110: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020e00120: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020e00130: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020e00140: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
=>0x007020e00150: fa fa 00 00 00 00 00 00[fa]fa fd fd fd fd fd fd
  0x007020e00160: fa fa fd fd fd fd fd fa fa fa fd fd fd fd fd fd
  0x007020e00170: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x007020e00180: fa fa fd fd fd fd fd fd fa fa 00 00 00 00 00 05
  0x007020e00190: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 00
  0x007020e001a0: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 07
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==4019==ABORTING
./asan.sh: line 1:  4019 Abort trap: 6           ./harness-1 crashes-1/$x

Input: crashes-1/01
=================================================================
==4021==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x000105600a81 at pc 0x0001028c4330 bp 0x00016d555de0 sp 0x00016d555dd8
WRITE of size 16 at 0x000105600a81 thread T0
    #0 0x1028c432c in snappy::internal::V128_StoreU(__simd128_uint8_t*, __simd128_uint8_t) snappy-internal.h:104
    #1 0x1028c56c4 in snappy::(anonymous namespace)::IncrementalCopy(char const*, char*, char*, char*) snappy.cc:492
    #2 0x1028cd304 in void snappy::SnappyDecompressor::DecompressAllTags<snappy::SnappyArrayWriter>(snappy::SnappyArrayWriter*) snappy.cc:1481
    #3 0x1028bb0c0 in bool snappy::InternalUncompressAllTags<snappy::SnappyArrayWriter>(snappy::SnappyDecompressor*, snappy::SnappyArrayWriter*, unsigned int, unsigned int) snappy.cc:1599
    #4 0x1028b8490 in bool snappy::InternalUncompress<snappy::SnappyArrayWriter>(snappy::Source*, snappy::SnappyArrayWriter*) snappy.cc:1586
    #5 0x1028b80a0 in snappy::RawUncompress(snappy::Source*, char*) snappy.cc:2035
    #6 0x1028b7e78 in snappy::RawUncompress(char const*, unsigned long, char*) snappy.cc:2030
    #7 0x1028ac158 in main+0x47c (harness-1:arm64+0x100004158) (BuildId: d93b3604237e3a8a92ad41210ac90bce32000000200000000100000000000d00)
    #8 0x195d47f24  (<unknown module>)

0x000105600a81 is located 1 bytes to the right of 48-byte region [0x000105600a50,0x000105600a80)
allocated by thread T0 here:
    #0 0x102cf1370 in wrap__Znwm+0x74 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x51370) (BuildId: f0a7ac5c49bc3abc851181b6f92b308a32000000200000000100000000000b00)
    #1 0x195fcfe48 in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__grow_by(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x98 (libc++.1.dylib:arm64e+0x19e48) (BuildId: 3ee924048fc3374ba598d5c9a8cd64b532000000200000000100000000050d00)
    #2 0x195fd0a90 in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::append(unsigned long, char)+0x74 (libc++.1.dylib:arm64e+0x1aa90) (BuildId: 3ee924048fc3374ba598d5c9a8cd64b532000000200000000100000000050d00)
    #3 0x1028bc1ac in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::resize[abi:v15006](unsigned long) string:976
    #4 0x1028b88b4 in snappy::STLStringResizeUninitialized(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, unsigned long) snappy-stubs-internal.h:510
    #5 0x1028b9ba8 in snappy::Compress(char const*, unsigned long, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*) snappy.cc:2131
    #6 0x1028ac064 in main+0x388 (harness-1:arm64+0x100004064) (BuildId: d93b3604237e3a8a92ad41210ac90bce32000000200000000100000000000d00)
    #7 0x195d47f24  (<unknown module>)

SUMMARY: AddressSanitizer: heap-buffer-overflow snappy-internal.h:104 in snappy::internal::V128_StoreU(__simd128_uint8_t*, __simd128_uint8_t)
Shadow bytes around the buggy address:
  0x007020ae0100: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020ae0110: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020ae0120: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020ae0130: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020ae0140: fa fa fa fa fa fa fa fa fa fa 00 00 00 00 00 00
=>0x007020ae0150:[fa]fa fd fd fd fd fd fd fa fa 00 00 00 00 00 00
  0x007020ae0160: fa fa fd fd fd fd fd fa fa fa fd fd fd fd fd fd
  0x007020ae0170: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x007020ae0180: fa fa fd fd fd fd fd fd fa fa 00 00 00 00 00 05
  0x007020ae0190: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 00
  0x007020ae01a0: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 07
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==4021==ABORTING
./asan.sh: line 1:  4021 Abort trap: 6           ./harness-1 crashes-1/$x

Input: crashes-1/02
=================================================================
==4023==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x000104f00ac0 at pc 0x000102635358 bp 0x00016dc02350 sp 0x00016dc01b10
READ of size 64 at 0x000104f00ac0 thread T0
    #0 0x102635354 in __asan_memmove+0xd0 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x41354) (BuildId: f0a7ac5c49bc3abc851181b6f92b308a32000000200000000100000000000b00)
    #1 0x10222137c in void snappy::SnappyDecompressor::DecompressAllTags<snappy::SnappyArrayWriter>(snappy::SnappyArrayWriter*) snappy.cc:1481
    #2 0x10220f0c0 in bool snappy::InternalUncompressAllTags<snappy::SnappyArrayWriter>(snappy::SnappyDecompressor*, snappy::SnappyArrayWriter*, unsigned int, unsigned int) snappy.cc:1599
    #3 0x10220c490 in bool snappy::InternalUncompress<snappy::SnappyArrayWriter>(snappy::Source*, snappy::SnappyArrayWriter*) snappy.cc:1586
    #4 0x10220c0a0 in snappy::RawUncompress(snappy::Source*, char*) snappy.cc:2035
    #5 0x10220be78 in snappy::RawUncompress(char const*, unsigned long, char*) snappy.cc:2030
    #6 0x102200158 in main+0x47c (harness-1:arm64+0x100004158) (BuildId: d93b3604237e3a8a92ad41210ac90bce32000000200000000100000000000d00)
    #7 0x195d47f24  (<unknown module>)

0x000104f00ac0 is located 0 bytes to the right of 48-byte region [0x000104f00a90,0x000104f00ac0)
allocated by thread T0 here:
    #0 0x102645370 in wrap__Znwm+0x74 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x51370) (BuildId: f0a7ac5c49bc3abc851181b6f92b308a32000000200000000100000000000b00)
    #1 0x195fcfe48 in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__grow_by(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x98 (libc++.1.dylib:arm64e+0x19e48) (BuildId: 3ee924048fc3374ba598d5c9a8cd64b532000000200000000100000000050d00)
    #2 0x195fd0a90 in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::append(unsigned long, char)+0x74 (libc++.1.dylib:arm64e+0x1aa90) (BuildId: 3ee924048fc3374ba598d5c9a8cd64b532000000200000000100000000050d00)
    #3 0x1022101ac in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::resize[abi:v15006](unsigned long) string:976
    #4 0x10220c8b4 in snappy::STLStringResizeUninitialized(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, unsigned long) snappy-stubs-internal.h:510
    #5 0x10220dba8 in snappy::Compress(char const*, unsigned long, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*) snappy.cc:2131
    #6 0x102200064 in main+0x388 (harness-1:arm64+0x100004064) (BuildId: d93b3604237e3a8a92ad41210ac90bce32000000200000000100000000000d00)
    #7 0x195d47f24  (<unknown module>)

SUMMARY: AddressSanitizer: heap-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x41354) (BuildId: f0a7ac5c49bc3abc851181b6f92b308a32000000200000000100000000000b00) in __asan_memmove+0xd0
Shadow bytes around the buggy address:
  0x007020a00100: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020a00110: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020a00120: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020a00130: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020a00140: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
=>0x007020a00150: fa fa 00 00 00 00 00 00[fa]fa fd fd fd fd fd fd
  0x007020a00160: fa fa fd fd fd fd fd fa fa fa fd fd fd fd fd fd
  0x007020a00170: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x007020a00180: fa fa fd fd fd fd fd fd fa fa 00 00 00 00 00 05
  0x007020a00190: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 00
  0x007020a001a0: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 07
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==4023==ABORTING
./asan.sh: line 1:  4023 Abort trap: 6           ./harness-1 crashes-1/$x

Input: crashes-1/04
=================================================================
==4025==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x000103b00ac1 at pc 0x000100e04330 bp 0x00016f015de0 sp 0x00016f015dd8
WRITE of size 16 at 0x000103b00ac1 thread T0
    #0 0x100e0432c in snappy::internal::V128_StoreU(__simd128_uint8_t*, __simd128_uint8_t) snappy-internal.h:104
    #1 0x100e05a4c in snappy::(anonymous namespace)::IncrementalCopy(char const*, char*, char*, char*) snappy.cc:516
    #2 0x100e0d304 in void snappy::SnappyDecompressor::DecompressAllTags<snappy::SnappyArrayWriter>(snappy::SnappyArrayWriter*) snappy.cc:1481
    #3 0x100dfb0c0 in bool snappy::InternalUncompressAllTags<snappy::SnappyArrayWriter>(snappy::SnappyDecompressor*, snappy::SnappyArrayWriter*, unsigned int, unsigned int) snappy.cc:1599
    #4 0x100df8490 in bool snappy::InternalUncompress<snappy::SnappyArrayWriter>(snappy::Source*, snappy::SnappyArrayWriter*) snappy.cc:1586
    #5 0x100df80a0 in snappy::RawUncompress(snappy::Source*, char*) snappy.cc:2035
    #6 0x100df7e78 in snappy::RawUncompress(char const*, unsigned long, char*) snappy.cc:2030
    #7 0x100dec158 in main+0x47c (harness-1:arm64+0x100004158) (BuildId: d93b3604237e3a8a92ad41210ac90bce32000000200000000100000000000d00)
    #8 0x195d47f24  (<unknown module>)

0x000103b00ac1 is located 1 bytes to the right of 48-byte region [0x000103b00a90,0x000103b00ac0)
allocated by thread T0 here:
    #0 0x101231370 in wrap__Znwm+0x74 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x51370) (BuildId: f0a7ac5c49bc3abc851181b6f92b308a32000000200000000100000000000b00)
    #1 0x195fcfe48 in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__grow_by(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x98 (libc++.1.dylib:arm64e+0x19e48) (BuildId: 3ee924048fc3374ba598d5c9a8cd64b532000000200000000100000000050d00)
    #2 0x195fd0a90 in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::append(unsigned long, char)+0x74 (libc++.1.dylib:arm64e+0x1aa90) (BuildId: 3ee924048fc3374ba598d5c9a8cd64b532000000200000000100000000050d00)
    #3 0x100dfc1ac in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::resize[abi:v15006](unsigned long) string:976
    #4 0x100df88b4 in snappy::STLStringResizeUninitialized(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, unsigned long) snappy-stubs-internal.h:510
    #5 0x100df9ba8 in snappy::Compress(char const*, unsigned long, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*) snappy.cc:2131
    #6 0x100dec064 in main+0x388 (harness-1:arm64+0x100004064) (BuildId: d93b3604237e3a8a92ad41210ac90bce32000000200000000100000000000d00)
    #7 0x195d47f24  (<unknown module>)

SUMMARY: AddressSanitizer: heap-buffer-overflow snappy-internal.h:104 in snappy::internal::V128_StoreU(__simd128_uint8_t*, __simd128_uint8_t)
Shadow bytes around the buggy address:
  0x007020780100: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020780110: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020780120: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020780130: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020780140: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
=>0x007020780150: fa fa 00 00 00 00 00 00[fa]fa fd fd fd fd fd fd
  0x007020780160: fa fa fd fd fd fd fd fa fa fa fd fd fd fd fd fd
  0x007020780170: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x007020780180: fa fa fd fd fd fd fd fd fa fa 00 00 00 00 00 05
  0x007020780190: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 00
  0x0070207801a0: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 07
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==4025==ABORTING
./asan.sh: line 1:  4025 Abort trap: 6           ./harness-1 crashes-1/$x

Input: crashes-1/07
=================================================================
==4027==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x000105d00ac0 at pc 0x000103411358 bp 0x00016ce26350 sp 0x00016ce25b10
READ of size 64 at 0x000105d00ac0 thread T0
    #0 0x103411354 in __asan_memmove+0xd0 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x41354) (BuildId: f0a7ac5c49bc3abc851181b6f92b308a32000000200000000100000000000b00)
    #1 0x102ffd37c in void snappy::SnappyDecompressor::DecompressAllTags<snappy::SnappyArrayWriter>(snappy::SnappyArrayWriter*) snappy.cc:1481
    #2 0x102feb0c0 in bool snappy::InternalUncompressAllTags<snappy::SnappyArrayWriter>(snappy::SnappyDecompressor*, snappy::SnappyArrayWriter*, unsigned int, unsigned int) snappy.cc:1599
    #3 0x102fe8490 in bool snappy::InternalUncompress<snappy::SnappyArrayWriter>(snappy::Source*, snappy::SnappyArrayWriter*) snappy.cc:1586
    #4 0x102fe80a0 in snappy::RawUncompress(snappy::Source*, char*) snappy.cc:2035
    #5 0x102fe7e78 in snappy::RawUncompress(char const*, unsigned long, char*) snappy.cc:2030
    #6 0x102fdc158 in main+0x47c (harness-1:arm64+0x100004158) (BuildId: d93b3604237e3a8a92ad41210ac90bce32000000200000000100000000000d00)
    #7 0x195d47f24  (<unknown module>)

0x000105d00ac0 is located 0 bytes to the right of 48-byte region [0x000105d00a90,0x000105d00ac0)
allocated by thread T0 here:
    #0 0x103421370 in wrap__Znwm+0x74 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x51370) (BuildId: f0a7ac5c49bc3abc851181b6f92b308a32000000200000000100000000000b00)
    #1 0x195fcfe48 in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__grow_by(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x98 (libc++.1.dylib:arm64e+0x19e48) (BuildId: 3ee924048fc3374ba598d5c9a8cd64b532000000200000000100000000050d00)
    #2 0x195fd0a90 in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::append(unsigned long, char)+0x74 (libc++.1.dylib:arm64e+0x1aa90) (BuildId: 3ee924048fc3374ba598d5c9a8cd64b532000000200000000100000000050d00)
    #3 0x102fec1ac in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::resize[abi:v15006](unsigned long) string:976
    #4 0x102fe88b4 in snappy::STLStringResizeUninitialized(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, unsigned long) snappy-stubs-internal.h:510
    #5 0x102fe9ba8 in snappy::Compress(char const*, unsigned long, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*) snappy.cc:2131
    #6 0x102fdc064 in main+0x388 (harness-1:arm64+0x100004064) (BuildId: d93b3604237e3a8a92ad41210ac90bce32000000200000000100000000000d00)
    #7 0x195d47f24  (<unknown module>)

SUMMARY: AddressSanitizer: heap-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x41354) (BuildId: f0a7ac5c49bc3abc851181b6f92b308a32000000200000000100000000000b00) in __asan_memmove+0xd0
Shadow bytes around the buggy address:
  0x007020bc0100: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020bc0110: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020bc0120: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020bc0130: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020bc0140: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
=>0x007020bc0150: fa fa 00 00 00 00 00 00[fa]fa 00 00 00 00 00 00
  0x007020bc0160: fa fa fd fd fd fd fd fa fa fa fd fd fd fd fd fd
  0x007020bc0170: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x007020bc0180: fa fa fd fd fd fd fd fd fa fa 00 00 00 00 00 05
  0x007020bc0190: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 00
  0x007020bc01a0: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 07
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==4027==ABORTING
./asan.sh: line 1:  4027 Abort trap: 6           ./harness-1 crashes-1/$x

Input: crashes-1/09
=================================================================
==4029==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x000103700ac0 at pc 0x000100fb9358 bp 0x00016f27e350 sp 0x00016f27db10
READ of size 64 at 0x000103700ac0 thread T0
    #0 0x100fb9354 in __asan_memmove+0xd0 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x41354) (BuildId: f0a7ac5c49bc3abc851181b6f92b308a32000000200000000100000000000b00)
    #1 0x100ba537c in void snappy::SnappyDecompressor::DecompressAllTags<snappy::SnappyArrayWriter>(snappy::SnappyArrayWriter*) snappy.cc:1481
    #2 0x100b930c0 in bool snappy::InternalUncompressAllTags<snappy::SnappyArrayWriter>(snappy::SnappyDecompressor*, snappy::SnappyArrayWriter*, unsigned int, unsigned int) snappy.cc:1599
    #3 0x100b90490 in bool snappy::InternalUncompress<snappy::SnappyArrayWriter>(snappy::Source*, snappy::SnappyArrayWriter*) snappy.cc:1586
    #4 0x100b900a0 in snappy::RawUncompress(snappy::Source*, char*) snappy.cc:2035
    #5 0x100b8fe78 in snappy::RawUncompress(char const*, unsigned long, char*) snappy.cc:2030
    #6 0x100b84158 in main+0x47c (harness-1:arm64+0x100004158) (BuildId: d93b3604237e3a8a92ad41210ac90bce32000000200000000100000000000d00)
    #7 0x195d47f24  (<unknown module>)

0x000103700ac0 is located 0 bytes to the right of 48-byte region [0x000103700a90,0x000103700ac0)
allocated by thread T0 here:
    #0 0x100fc9370 in wrap__Znwm+0x74 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x51370) (BuildId: f0a7ac5c49bc3abc851181b6f92b308a32000000200000000100000000000b00)
    #1 0x195fcfe48 in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__grow_by(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)+0x98 (libc++.1.dylib:arm64e+0x19e48) (BuildId: 3ee924048fc3374ba598d5c9a8cd64b532000000200000000100000000050d00)
    #2 0x195fd0a90 in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::append(unsigned long, char)+0x74 (libc++.1.dylib:arm64e+0x1aa90) (BuildId: 3ee924048fc3374ba598d5c9a8cd64b532000000200000000100000000050d00)
    #3 0x100b941ac in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::resize[abi:v15006](unsigned long) string:976
    #4 0x100b908b4 in snappy::STLStringResizeUninitialized(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*, unsigned long) snappy-stubs-internal.h:510
    #5 0x100b91ba8 in snappy::Compress(char const*, unsigned long, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*) snappy.cc:2131
    #6 0x100b84064 in main+0x388 (harness-1:arm64+0x100004064) (BuildId: d93b3604237e3a8a92ad41210ac90bce32000000200000000100000000000d00)
    #7 0x195d47f24  (<unknown module>)

SUMMARY: AddressSanitizer: heap-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x41354) (BuildId: f0a7ac5c49bc3abc851181b6f92b308a32000000200000000100000000000b00) in __asan_memmove+0xd0
Shadow bytes around the buggy address:
  0x007020700100: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020700110: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020700120: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020700130: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x007020700140: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
=>0x007020700150: fa fa 00 00 00 00 00 00[fa]fa fd fd fd fd fd fd
  0x007020700160: fa fa fd fd fd fd fd fa fa fa fd fd fd fd fd fd
  0x007020700170: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x007020700180: fa fa fd fd fd fd fd fd fa fa 00 00 00 00 00 05
  0x007020700190: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 00
  0x0070207001a0: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 07
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==4029==ABORTING
./asan.sh: line 1:  4029 Abort trap: 6           ./harness-1 crashes-1/$x
